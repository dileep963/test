name: Dynamic Matrix Example

on: workflow_dispatch

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-matrix.outputs.projects }}

    steps:
      - name: Define Matrix Without jq
        id: set-matrix
        run: |
          # Dynamically define the projects list (this is a string, not a JSON array)
          projects="amp,amp1"
          echo "::set-output name=projects::$projects"

  run-parallel:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        project: ${{ fromJson('["' + needs.define-matrix.outputs.projects.replace(',', '","') + '"]') }}
        zone: [e1, e2]  # Static zone values

    steps:
      - name: Print Project and Zone
        run: |
          echo "Project: ${{ matrix.project }} | Zone: ${{ matrix.zone }}"
